*&---------------------------------------------------------------------*
*& Include          MZC702_02F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form CREATE
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CREATE .
  DATA: LS_MT     TYPE ZTC702_MTMASTER,
        LV_NUM    TYPE N LENGTH 3,
        LV_ANSWER TYPE C LENGTH 1,
        LV_GDCODE TYPE C LENGTH 4.

  IF ZTC702_MTMASTER-MTCODE = SPACE
    OR ZTC702_MTMASTER-GDNAME = SPACE
    OR ZTC702_MTMASTER-EXPTYPE = SPACE
    OR ZTC702_MTMASTER-WHTYPE = SPACE.

    MESSAGE '공란에 정보를 입력하십시오.' TYPE 'I'.
  ELSE.
    CASE ZTC702_MTMASTER-MTCODE.
      WHEN 'P'.
        SELECT GDCODE
          FROM ZTC702_MTMASTER
          INTO CORRESPONDING FIELDS OF LS_MT
          UP TO 1 ROWS
         WHERE MTCODE = 'P'
         ORDER BY GDCODE DESCENDING.
        ENDSELECT.

        LV_NUM = LS_MT-GDCODE+1(3) + 1.
        CONCATENATE 'P' LV_NUM INTO LV_GDCODE.

      WHEN 'R'.
        SELECT GDCODE
          FROM ZTC702_MTMASTER
          INTO CORRESPONDING FIELDS OF LS_MT
          UP TO 1 ROWS
         WHERE MTCODE = 'R'
         ORDER BY GDCODE DESCENDING.
        ENDSELECT.

        LV_NUM = LS_MT-GDCODE+1(3) + 1.
        CONCATENATE 'R' LV_NUM INTO LV_GDCODE.

      WHEN 'A'.
        SELECT GDCODE
          FROM ZTC702_MTMASTER
          INTO CORRESPONDING FIELDS OF LS_MT
          UP TO 1 ROWS
         WHERE MTCODE = 'A'
         ORDER BY GDCODE DESCENDING.
        ENDSELECT.

        LV_NUM = LS_MT-GDCODE+1(3) + 1.
        CONCATENATE 'A' LV_NUM INTO LV_GDCODE.

    ENDCASE.

    LS_TABLE-GDCODE = LV_GDCODE.
    LS_TABLE-MTCODE = ZTC702_MTMASTER-MTCODE.
    LS_TABLE-GDNAME = ZTC702_MTMASTER-GDNAME.
    LS_TABLE-EXPTYPE  = ZTC702_MTMASTER-EXPTYPE.
    LS_TABLE-WHTYPE  = ZTC702_MTMASTER-WHTYPE.

    LS_TABLE-CRNAM  = SY-UNAME.
    LS_TABLE-ERDAT  = SY-DATUM.
    LS_TABLE-ERTIM  = SY-UZEIT.
    LS_TABLE-CHNAM  = SY-UNAME.
    LS_TABLE-CHDAT  = SY-DATUM.
    LS_TABLE-CHTIM  = SY-UZEIT.

    GS_MTIV-GDCODE = LV_GDCODE.
    GS_MTIV-PLCODE = 'P0100'.
    GS_MTIV-WHCODE = 'WH01'.
    GS_MTIV-RINVEN = '0'.
    GS_MTIV-UNIT   = 'EA'.

    GS_MTIV-CRNAM  = SY-UNAME.
    GS_MTIV-ERDAT  = SY-DATUM.
    GS_MTIV-ERTIM  = SY-UZEIT.
    GS_MTIV-CHNAM  = SY-UNAME.
    GS_MTIV-CHDAT  = SY-DATUM.
    GS_MTIV-CHTIM  = SY-UZEIT.

    GS_MTIV-STATUS = 'A'.
    INSERT ZTC702_MTIV FROM GS_MTIV.
    GS_MTIV-STATUS = 'R'.
    INSERT ZTC702_MTIV FROM GS_MTIV.
    GS_MTIV-STATUS = 'D'.
    INSERT ZTC702_MTIV FROM GS_MTIV.

    CALL FUNCTION 'POPUP_TO_CONFIRM'
      EXPORTING
        TITLEBAR              = '신규 자재 등록'
        TEXT_QUESTION         = '신규자재를 등록하시겠습니까?'
        TEXT_BUTTON_1         = '예'
        TEXT_BUTTON_2         = '아니오'
        DISPLAY_CANCEL_BUTTON = ''
      IMPORTING
        ANSWER                = LV_ANSWER.

    IF LV_ANSWER = 1.
      INSERT ZTC702_MTMASTER FROM LS_TABLE.

      IF SY-SUBRC = 0.
        MESSAGE '신규 자재 등록 (자재 코드 : ' && LS_TABLE-GDCODE && ' )' TYPE 'I'.
        COMMIT WORK.
        GV_RA1 = GV_RA2 = GV_RA3 = GV_RA4 = SPACE.
        CASE LS_TABLE-MTCODE(1).
          WHEN 'P'.
            GV_RA2 = 'X'.
          WHEN 'R'.
            GV_RA3 = 'X'.
          WHEN 'A'.
            GV_RA4 = 'X'.
          WHEN OTHERS.
            GV_RA1 = 'X'.
        ENDCASE.
        PERFORM SEARCH.
        LEAVE TO SCREEN 0.
      ELSEIF SY-SUBRC = 4.
        MESSAGE '자재가 이미 등록되어있습니다.' TYPE 'I'.
        ROLLBACK WORK. " 업데이트 취소.
        SET SCREEN 101.
        LEAVE SCREEN.
      ELSE.
        MESSAGE '알 수 없는 에러가 발생했습니다.' TYPE 'I'.
        ROLLBACK WORK. " 업데이트 취소.
        SET SCREEN 101.
        LEAVE SCREEN.
      ENDIF.
    ELSE.
      PERFORM CLEAR.
    ENDIF.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form EDIT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM EDIT .
  DATA: LT_ROW    TYPE LVC_T_ROW,
        LS_ROW    TYPE LVC_S_ROW,
        LV_ANSWER TYPE C LENGTH 1.

  IF ZTC702_MTMASTER-GDNAME = SPACE
    OR ZTC702_MTMASTER-EXPTYPE = SPACE
    OR ZTC702_MTMASTER-WHTYPE = SPACE.
    MESSAGE '공란에 정보를 입력하십시오.' TYPE 'I'.

  ELSE.

    LS_TABLE-GDCODE = ZTC702_MTMASTER-GDCODE.
    LS_TABLE-MTCODE = ZTC702_MTMASTER-MTCODE.
    LS_TABLE-GDNAME = ZTC702_MTMASTER-GDNAME.
    LS_TABLE-EXPTYPE = ZTC702_MTMASTER-EXPTYPE.
    LS_TABLE-WHTYPE = ZTC702_MTMASTER-WHTYPE.

    LS_TABLE-CHNAM  = SY-UNAME.
    LS_TABLE-CHDAT  = SY-DATUM.
    LS_TABLE-CHTIM  = SY-UZEIT.

    CALL FUNCTION 'POPUP_TO_CONFIRM'
      EXPORTING
        TITLEBAR              = '자재 정보 수정'
        TEXT_QUESTION         = '자재 정보를 수정하시겠습니까?'
        TEXT_BUTTON_1         = '예'
        TEXT_BUTTON_2         = '아니오'
        DISPLAY_CANCEL_BUTTON = ''
      IMPORTING
        ANSWER                = LV_ANSWER.

    IF LV_ANSWER = 1.
      MODIFY ZTC702_MTMASTER FROM LS_TABLE.

      IF SY-SUBRC = 0.
        MESSAGE '자재 정보 수정 (자재 코드 : ' && LS_TABLE-GDCODE && ' )'  TYPE 'I'.
        COMMIT WORK.
        GV_RA1 = GV_RA2 = GV_RA3 = GV_RA4 = SPACE.
        CASE LS_TABLE-MTCODE(1).
          WHEN 'P'.
            GV_RA2 = 'X'.
          WHEN 'R'.
            GV_RA3 = 'X'.
          WHEN 'A'.
            GV_RA4 = 'X'.
          WHEN OTHERS.
            GV_RA1 = 'X'.
        ENDCASE.
        PERFORM SEARCH.
      ELSE.
        MESSAGE '자재 정보를 수정하는데 실패했습니다.' TYPE 'I'.
        ROLLBACK WORK.
      ENDIF.
    ENDIF.

    LEAVE TO SCREEN 0.

  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form SEARCH
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM SEARCH.
  CLEAR GT_TABLE.

  CASE 'X'.
    WHEN GV_RA1.
      IF GV_CB1 = SPACE.
        SELECT *
          FROM ZTC702_MTMASTER
          INTO CORRESPONDING FIELDS OF TABLE GT_TABLE
         WHERE DELFLAG = SPACE
         ORDER BY GDCODE.
      ELSE.
        SELECT *
          FROM ZTC702_MTMASTER
          INTO CORRESPONDING FIELDS OF TABLE GT_TABLE
         ORDER BY GDCODE.
      ENDIF.

    WHEN GV_RA2.
      IF GV_CB1 = SPACE.
        SELECT *
          FROM ZTC702_MTMASTER
          INTO CORRESPONDING FIELDS OF TABLE GT_TABLE
         WHERE MTCODE = 'P'
           AND DELFLAG = SPACE
         ORDER BY GDCODE.
      ELSE.
        SELECT *
          FROM ZTC702_MTMASTER
          INTO CORRESPONDING FIELDS OF TABLE GT_TABLE
         WHERE MTCODE = 'P'
         ORDER BY GDCODE.
      ENDIF.

    WHEN GV_RA3.
      IF GV_CB1 = SPACE.
        SELECT *
          FROM ZTC702_MTMASTER
          INTO CORRESPONDING FIELDS OF TABLE GT_TABLE
         WHERE MTCODE = 'R'
           AND DELFLAG = SPACE
         ORDER BY GDCODE.

      ELSE.
        SELECT *
          FROM ZTC702_MTMASTER
          INTO CORRESPONDING FIELDS OF TABLE GT_TABLE
         WHERE MTCODE = 'R'
         ORDER BY GDCODE.
      ENDIF.

    WHEN GV_RA4.
      IF GV_CB1 = SPACE.
        SELECT *
          FROM ZTC702_MTMASTER
          INTO CORRESPONDING FIELDS OF TABLE GT_TABLE
         WHERE MTCODE = 'A'
           AND DELFLAG = SPACE
         ORDER BY GDCODE.
      ELSE.
        SELECT *
          FROM ZTC702_MTMASTER
          INTO CORRESPONDING FIELDS OF TABLE GT_TABLE
         WHERE MTCODE = 'A'
         ORDER BY GDCODE.
      ENDIF.

    WHEN OTHERS.
      MESSAGE E021(ZC702_MESSAGE).
  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form DELFLAG
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM DELFLAG .
  DATA: LT_ROW    TYPE LVC_T_ROW,
        LS_ROW    TYPE LVC_S_ROW,
        LV_ANSWER TYPE C LENGTH 1,
        LT_MTIV   TYPE TABLE OF ZTC702_MTIV,
        LS_MTIV   TYPE ZTC702_MTIV.

  CALL METHOD GO_ALV_GRID->GET_SELECTED_ROWS
    IMPORTING
      ET_INDEX_ROWS = LT_ROW.

  IF LT_ROW IS INITIAL.
    MESSAGE '자재를 선택하십시오.' TYPE 'I'.
  ELSE.
    LOOP AT LT_ROW INTO LS_ROW.
      READ TABLE GT_TABLE INTO LS_TABLE INDEX LS_ROW-INDEX.
    ENDLOOP.

    IF LS_TABLE-DELFLAG = SPACE.
      SELECT RINVEN
        FROM ZTC702_MTIV
        INTO CORRESPONDING FIELDS OF TABLE LT_MTIV
       WHERE GDCODE = LS_TABLE-GDCODE
         AND DELFLAG = SPACE.

      LOOP AT LT_MTIV INTO LS_MTIV.
        IF LS_MTIV-RINVEN = 0.
        ELSE.
          MESSAGE '재고가 전부 소진되지 않았습니다.' TYPE 'I'.
          RETURN.
        ENDIF.
      ENDLOOP.

      CALL FUNCTION 'POPUP_TO_CONFIRM'
        EXPORTING
          TITLEBAR              = '자재 관리 정지'
          TEXT_QUESTION         = '자재 관리를 멈추시겠습니까?'
          TEXT_BUTTON_1         = '예'
          TEXT_BUTTON_2         = '아니오'
          DISPLAY_CANCEL_BUTTON = ''
        IMPORTING
          ANSWER                = LV_ANSWER.

      IF LV_ANSWER = 1.
        LS_TABLE-DELFLAG = 'X'.
        LS_TABLE-CHNAM = SY-UNAME.
        LS_TABLE-CHDAT = SY-DATUM.
        LS_TABLE-CHTIM = SY-UZEIT.

        UPDATE ZTC702_MTMASTER FROM LS_TABLE.
        MESSAGE '자재 관리 정지 (자재 코드 : ' && LS_TABLE-GDCODE && ' )'  TYPE 'I'.
        COMMIT WORK.
        CLEAR GT_TABLE.
      ENDIF.

    ELSEIF LS_TABLE-DELFLAG = 'X'.
      CALL FUNCTION 'POPUP_TO_CONFIRM'
        EXPORTING
          TITLEBAR              = '자재 관리 시작'
          TEXT_QUESTION         = '자재 관리를 시작하시겠습니까?'
          TEXT_BUTTON_1         = '예'
          TEXT_BUTTON_2         = '아니오'
          DISPLAY_CANCEL_BUTTON = ''
        IMPORTING
          ANSWER                = LV_ANSWER.

      IF LV_ANSWER = 1.
        LS_TABLE-DELFLAG = ''.
        LS_TABLE-CHNAM = SY-UNAME.
        LS_TABLE-CHDAT = SY-DATUM.
        LS_TABLE-CHTIM = SY-UZEIT.

        UPDATE ZTC702_MTMASTER FROM LS_TABLE.
        MESSAGE '자재 관리 실행 (자재 코드 : ' && LS_TABLE-GDCODE && ' )' TYPE 'I'.
        COMMIT WORK.
        GV_RA1 = GV_RA2 = GV_RA3 = GV_RA4 = SPACE.
        CASE LS_TABLE-MTCODE(1).
          WHEN 'P'.
            GV_RA2 = 'X'.
          WHEN 'R'.
            GV_RA3 = 'X'.
          WHEN 'A'.
            GV_RA4 = 'X'.
          WHEN OTHERS.
            GV_RA1 = 'X'.
        ENDCASE.
        PERFORM SEARCH.
      ENDIF.
    ENDIF.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form LAYOUT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM LAYOUT .
  GS_LAYOUT-ZEBRA      = 'X'.
  GS_LAYOUT-INFO_FNAME = 'COLOR'.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form FIELD_CATALOG
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM FIELD_CATALOG .
  GS_FIELD_CAT-FIELDNAME = 'GDCODE'.
  GS_FIELD_CAT-COLTEXT   = '품목 코드'.
  GS_FIELD_CAT-COL_OPT   = 'X'.
  GS_FIELD_CAT-JUST      = 'C'.
  GS_FIELD_CAT-KEY       = 'X'.
  APPEND GS_FIELD_CAT TO GT_FIELD_CAT.

  CLEAR GS_FIELD_CAT.
  GS_FIELD_CAT-FIELDNAME = 'MTCODE'.
  GS_FIELD_CAT-COLTEXT   = '품목 구분'.
*  GS_FIELD_CAT-COL_OPT   = 'X'.
  GS_FIELD_CAT-JUST      = 'C'.
  GS_FIELD_CAT-OUTPUTLEN = 6.
  APPEND GS_FIELD_CAT TO GT_FIELD_CAT.

  CLEAR GS_FIELD_CAT.
  GS_FIELD_CAT-FIELDNAME = 'GDNAME'.
  GS_FIELD_CAT-COLTEXT   = '품목명'.
*  GS_FIELD_CAT-COL_OPT   = 'X'.
  GS_FIELD_CAT-OUTPUTLEN = 32.
  GS_FIELD_CAT-JUST      = 'L'.
  APPEND GS_FIELD_CAT TO GT_FIELD_CAT.

  CLEAR GS_FIELD_CAT.
  GS_FIELD_CAT-FIELDNAME = 'EXPTYPE'.
  GS_FIELD_CAT-COLTEXT   = '유통기한 유무'.
*  GS_FIELD_CAT-COL_OPT   = 'X'.
  GS_FIELD_CAT-JUST      = 'C'.
  GS_FIELD_CAT-OUTPUTLEN = 10.
  APPEND GS_FIELD_CAT TO GT_FIELD_CAT.

  CLEAR GS_FIELD_CAT.
  GS_FIELD_CAT-FIELDNAME = 'WHTYPE'.
  GS_FIELD_CAT-COLTEXT   = '보관 구분'.
  GS_FIELD_CAT-COL_OPT   = 'X'.
  GS_FIELD_CAT-JUST      = 'C'.
  APPEND GS_FIELD_CAT TO GT_FIELD_CAT.

  CLEAR GS_FIELD_CAT.
  GS_FIELD_CAT-FIELDNAME = 'CRNAM'.
  GS_FIELD_CAT-COLTEXT   = '생성자'.
*  GS_FIELD_CAT-COL_OPT   = 'X'.
  GS_FIELD_CAT-OUTPUTLEN = 8.
  GS_FIELD_CAT-JUST      = 'C'.
  APPEND GS_FIELD_CAT TO GT_FIELD_CAT.

  CLEAR GS_FIELD_CAT.
  GS_FIELD_CAT-FIELDNAME = 'ERDAT'.
  GS_FIELD_CAT-COLTEXT   = '생성 일자'.
*  GS_FIELD_CAT-COL_OPT   = 'X'.
  GS_FIELD_CAT-JUST      = 'C'.
  GS_FIELD_CAT-OUTPUTLEN = 10.
  APPEND GS_FIELD_CAT TO GT_FIELD_CAT.

  CLEAR GS_FIELD_CAT.
  GS_FIELD_CAT-FIELDNAME = 'ERTIM'.
  GS_FIELD_CAT-COLTEXT   = '생성 시간'.
*  GS_FIELD_CAT-COL_OPT   = 'X'.
  GS_FIELD_CAT-JUST      = 'C'.
  GS_FIELD_CAT-OUTPUTLEN = 10.
  APPEND GS_FIELD_CAT TO GT_FIELD_CAT.

  CLEAR GS_FIELD_CAT.
  GS_FIELD_CAT-FIELDNAME = 'CHNAM'.
  GS_FIELD_CAT-COLTEXT   = '변경자'.
*  GS_FIELD_CAT-COL_OPT   = 'X'.
  GS_FIELD_CAT-OUTPUTLEN = 8.
  GS_FIELD_CAT-JUST      = 'C'.
  APPEND GS_FIELD_CAT TO GT_FIELD_CAT.

  CLEAR GS_FIELD_CAT.
  GS_FIELD_CAT-FIELDNAME = 'CHDAT'.
  GS_FIELD_CAT-COLTEXT   = '변경 날짜'.
*  GS_FIELD_CAT-COL_OPT   = 'X'.
  GS_FIELD_CAT-JUST      = 'C'.
  GS_FIELD_CAT-OUTPUTLEN = 10.
  APPEND GS_FIELD_CAT TO GT_FIELD_CAT.

  CLEAR GS_FIELD_CAT.
  GS_FIELD_CAT-FIELDNAME = 'CHTIM'.
  GS_FIELD_CAT-COLTEXT   = '변경 시간'.
*  GS_FIELD_CAT-COL_OPT   = 'X'.
  GS_FIELD_CAT-JUST      = 'C'.
  GS_FIELD_CAT-OUTPUTLEN = 10.
  APPEND GS_FIELD_CAT TO GT_FIELD_CAT.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form CLEAR
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CLEAR .
* 스크린 인풋 필드 초기화.
  GV_RA2 = GV_RA3 = GV_RA4 = SPACE.
  GV_RA1 = 'X'.
  GV_CB1 = SPACE.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form SELECT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM SELECT .
  DATA: LT_ROW    TYPE LVC_T_ROW,
        LS_ROW    TYPE LVC_S_ROW,
        LV_ANSWER TYPE C LENGTH 1.

  CALL METHOD GO_ALV_GRID->GET_SELECTED_ROWS
    IMPORTING
      ET_INDEX_ROWS = LT_ROW.

  IF LT_ROW IS INITIAL.
    MESSAGE '자재를 선택하십시오.' TYPE 'I'.
  ELSE.
    LOOP AT LT_ROW INTO LS_ROW.
      READ TABLE GT_TABLE INTO LS_TABLE INDEX LS_ROW-INDEX.
    ENDLOOP.

    MOVE-CORRESPONDING LS_TABLE TO ZTC702_MTMASTER.

    CALL SCREEN 102 STARTING AT 10 10.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form EXCLUDE
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM EXCLUDE .

  APPEND CL_GUI_ALV_GRID=>MC_FC_DETAIL TO GT_EXCLUDE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_SORT_ASC TO GT_EXCLUDE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_SORT_DSC TO GT_EXCLUDE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_FIND TO GT_EXCLUDE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_FILTER TO GT_EXCLUDE.
  APPEND CL_GUI_ALV_GRID=>MC_MB_SUM TO GT_EXCLUDE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_PRINT_BACK TO GT_EXCLUDE.
  APPEND CL_GUI_ALV_GRID=>MC_MB_VIEW TO GT_EXCLUDE.
  APPEND CL_GUI_ALV_GRID=>MC_MB_EXPORT TO GT_EXCLUDE.
  APPEND CL_GUI_ALV_GRID=>MC_MB_VARIANT TO GT_EXCLUDE.
  APPEND CL_GUI_ALV_GRID=>MC_FC_INFO TO GT_EXCLUDE.

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2023. Sap Release 751
