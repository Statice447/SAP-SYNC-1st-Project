*&---------------------------------------------------------------------*
*& Include          MZPPTEMP19_01F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form DISPLAY_PLANT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_plant .

  PERFORM get_plant_data.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form SET_FCAT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_fcat .
  CLEAR gs_fcat.
  gs_fcat-fieldname = 'PLCODE'.
  gs_fcat-coltext = '공장코드'.
  gs_fcat-key = 'X'.
  gs_fcat-just = 'C'.
  gs_fcat-outputlen = 6.
  APPEND gs_fcat TO gt_fcat.

  CLEAR gs_fcat.
  gs_fcat-fieldname = 'PLNAME'.
  gs_fcat-coltext = '공장명'.
  gs_fcat-just = 'C'.
  gs_fcat-outputlen = 8.
  APPEND gs_fcat TO gt_fcat.

  CLEAR gs_fcat.
  gs_fcat-fieldname = 'PNAME'.
  gs_fcat-coltext = '담당자이름'.
  gs_fcat-just = 'C'.
  gs_fcat-outputlen = 10.
  APPEND gs_fcat TO gt_fcat.

  CLEAR gs_fcat.
  gs_fcat-fieldname = 'PLCONT'.
  gs_fcat-coltext = '연락처'.
  gs_fcat-just = 'C'.
  gs_fcat-outputlen = 12.
  APPEND gs_fcat TO gt_fcat.

  CLEAR gs_fcat.
  gs_fcat-fieldname = 'PLADR'.
  gs_fcat-coltext = '주소'.
  gs_fcat-outputlen = 40.
  APPEND gs_fcat TO gt_fcat.

  CLEAR  gs_fcat.
  gs_fcat-fieldname = 'CRNAM'.
  gs_fcat-coltext = '생성자'.
  gs_fcat-just = 'C'.
  gs_fcat-outputlen = 8.
  APPEND gs_fcat TO gt_fcat.

  CLEAR  gs_fcat.
  gs_fcat-fieldname = 'ERDAT'.
  gs_fcat-coltext = '생성 일자'.
  gs_fcat-just = 'C'.
  gs_fcat-outputlen = 10.
  APPEND gs_fcat TO gt_fcat.

  CLEAR  gs_fcat.
  gs_fcat-fieldname = 'ERTIM'.
  gs_fcat-coltext = '생성 시간'.
  gs_fcat-just = 'C'.
  gs_fcat-outputlen = 10.
  APPEND gs_fcat TO gt_fcat.

  CLEAR  gs_fcat.
  gs_fcat-fieldname = 'CHNAM'.
  gs_fcat-coltext = '변경자'.
  gs_fcat-just = 'C'.
  gs_fcat-outputlen = 8.
  APPEND gs_fcat TO gt_fcat.

  CLEAR  gs_fcat.
  gs_fcat-fieldname = 'CHDAT'.
  gs_fcat-coltext = '변경 일자'.
  gs_fcat-just = 'C'.
  gs_fcat-outputlen = 10.
  APPEND gs_fcat TO gt_fcat.

  CLEAR  gs_fcat.
  gs_fcat-fieldname = 'CHTIM'.
  gs_fcat-coltext = '변경 시간'.
  gs_fcat-just = 'C'.
  gs_fcat-outputlen = 10.
  APPEND gs_fcat TO gt_fcat.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form SET_LAYOUT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_layout .

  gs_layout-info_fname = 'COLOR'.   " ROW 색 변경 필드
  gs_layout-zebra = 'X'.
  gs_layout-sel_mode = 'A'.
*  gs_layout-cwidth_opt = 'X'.       " ALV 크기 정렬

ENDFORM.
*&---------------------------------------------------------------------*
*& Form GET_PLANT_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_plant_data .
  DATA: lt_plant TYPE TABLE OF gty_plant,
        ls_plant TYPE gty_plant.

**** 조건 검색을 위한 range 타입 설정 -> 사용 필드만큼 선언
  DATA: lt_plcode TYPE RANGE OF gty_plant-plcode,
        ls_plcode LIKE LINE OF lt_plcode.

  DATA: lt_pernr TYPE RANGE OF gty_plant-pernr,
        ls_pernr LIKE LINE OF lt_pernr.

**** 데이터를 화면테이블에 넣기 위해 클리어
  CLEAR gt_plant.

**** 조건 검색을 위한 range 타입 조건 설정 => 필드가 입력되면 필드와 동일한 조건으로
  IF ztc702_plant-plcode IS NOT INITIAL.
    ls_plcode-sign = 'I'.
    ls_plcode-option = 'EQ'.
    ls_plcode-low = ztc702_plant-plcode.
    APPEND ls_plcode TO lt_plcode.
  ENDIF.

  IF ztc702_plant-pernr IS NOT INITIAL.
    ls_pernr-sign = 'I'.
    ls_pernr-option = 'EQ'.
    ls_pernr-low = ztc702_plant-pernr.
    APPEND ls_pernr TO lt_pernr.
  ENDIF.


**** Select문 range 타입으로 선언했으므로 where ~ in 조건 + 삭제플래그가 체크가 안될 경우 검색.
  SELECT *
    FROM ztc702_plant INTO CORRESPONDING FIELDS OF TABLE lt_plant
    WHERE plcode IN lt_plcode
    AND pernr IN lt_pernr.

  SORT lt_plant ASCENDING BY plcode.

**** 라디오 버튼에 따라 검색이 다르게 설정
  CASE 'X'.
    WHEN gv_rad.            " 정상 리스트
      LOOP AT lt_plant INTO ls_plant WHERE delflag = space.
        APPEND ls_plant TO gt_plant.
      ENDLOOP.
    WHEN gv_rad_all.        " 전체 리스트
      LOOP AT lt_plant INTO ls_plant.
        APPEND ls_plant TO gt_plant.
      ENDLOOP.
    WHEN gv_rad_chkdel.     " 삭제플래그가 체크 된 리스트
      LOOP AT lt_plant INTO ls_plant WHERE delflag = 'X'.
        APPEND ls_plant TO gt_plant.
      ENDLOOP.
  ENDCASE.

  IF gt_plant IS INITIAL.
    MESSAGE '해당 공장코드는 존재하지 않습니다.' TYPE 'I'.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form CHECK_PLANT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM check_plant .
  DATA: ls_plant  TYPE ztc702_plant,
        lt_row    TYPE lvc_t_row,
        ls_row    TYPE lvc_s_row,
        lv_line   TYPE i,
        lv_answer TYPE c LENGTH 1.

**** ALV ROW 인덱스 찾기
  CALL METHOD go_alv_grid->get_selected_rows
    IMPORTING
      et_index_rows = lt_row.

  DESCRIBE TABLE lt_row LINES lv_line.

**** ALV ROW 체크
  IF lt_row IS INITIAL.
    MESSAGE '라인을 선택해주세요.' TYPE 'I'.

  ELSEIF lv_line > 1.
    MESSAGE '라인을 하나만 선택해주세요.' TYPE 'I'.

  ELSE.
    LOOP AT lt_row INTO ls_row.
      READ TABLE gt_plant INTO ls_plant INDEX ls_row-index.
    ENDLOOP.

**** 선택된 스트럭처의 삭제플래그가 없을 경우
    IF ls_plant-delflag = space.
      CALL FUNCTION 'POPUP_TO_CONFIRM'
        EXPORTING
          titlebar              = '공장 가동 중지'
          text_question         = '공장 가동을 중지시키겠습니까?'
          text_button_1         = '예'
          text_button_2         = '아니오'
          display_cancel_button = space
        IMPORTING
          answer                = lv_answer.

      IF lv_answer = 1.
**** 삭제플래그 변경 및 LOG 변경
        ls_plant-delflag = 'X'.
        ls_plant-chnam = sy-uname.
        ls_plant-chdat = sy-datum.
        ls_plant-chtim = sy-uzeit.

        UPDATE ztc702_plant FROM ls_plant.
        MESSAGE '공장 가동 중지' TYPE 'I'.

        COMMIT WORK.
      ENDIF.

**** 선택된 스트럭처의 삭제플래그가 있을 경우
    ELSEIF ls_plant-delflag = 'X'.
      CALL FUNCTION 'POPUP_TO_CONFIRM'
        EXPORTING
          titlebar              = '공장 가동'
          text_question         = '공장을 가동 시키겠습니까?'
          text_button_1         = '예'
          text_button_2         = '아니오'
          display_cancel_button = space
        IMPORTING
          answer                = lv_answer.

      IF lv_answer = 1.
**** 삭제플래그 변경 및 LOG 변경
        ls_plant-delflag = space.
        ls_plant-chnam = sy-uname.
        ls_plant-chdat = sy-datum.
        ls_plant-chtim = sy-uzeit.

        UPDATE ztc702_plant FROM ls_plant.
        MESSAGE '공장 가동' TYPE 'I'.

        COMMIT WORK.
      ENDIF.

    ENDIF.

**** 업데이트 된 DB 다시 불러오기
    PERFORM get_plant_data.

  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form CREATE_PLANT2
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM create_plant2 .
  gv_dynnr_check = 'CREATE'.
  CALL SCREEN 110
  STARTING AT 10 10
  ENDING AT 65 17.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form CHANGE_PLANT2
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM change_plant2 .
  gv_dynnr_check = 'CHANGE'.
***** alv row 인데스 찾기
  CALL METHOD go_alv_grid->get_selected_rows
    IMPORTING
      et_index_rows = gt_index.

***** 선택된 ROW 개수 찾기
  DESCRIBE TABLE gt_index LINES gv_lines.

  LOOP AT gt_index INTO gs_index.

  ENDLOOP.

  IF gt_index IS INITIAL.
    MESSAGE '라인을 선택해주세요.' TYPE 'I'.
  ELSEIF gv_lines > 1.
    MESSAGE '라인을 하나만 선택해주세요.' TYPE 'I'.
  ELSE.
    CALL SCREEN 110
      STARTING AT 10 10
      ENDING AT 65 17.
  ENDIF.



ENDFORM.
*&---------------------------------------------------------------------*
*& Form CHANGE_CONT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*      -->P_LS_PLANT_PLCONT  text
*      <--P_NUMC_CONT  text
*&---------------------------------------------------------------------*
FORM change_cont  USING    VALUE(p_ls_plant_plcont) TYPE ztc702_plant-plcont
                  CHANGING p_numc_cont.

  DATA: ls_plcont TYPE string,
        lv_len    TYPE n LENGTH 1.   " 전화번호 길이 측정.

  DATA: lv_text  TYPE string,
        lv_text1 TYPE string,
        lv_text2 TYPE string,
        lv_text3 TYPE string.


  ls_plcont = p_ls_plant_plcont.
  lv_len = strlen( ls_plcont ).


  IF lv_len = 3.
    lv_text1 = ls_plcont+0(3).
    lv_text2 = ls_plcont+4(4).
    lv_text3 = ls_plcont+9(4).

    CONCATENATE lv_text1 lv_text2 lv_text3 INTO lv_text.

  ELSEIF lv_len = 1.
    lv_text1 = ls_plcont+0(2).
    lv_text2 = ls_plcont+3(3).
    lv_text3 = ls_plcont+7(4).

    CONCATENATE lv_text1 lv_text2 lv_text3 INTO lv_text.

  ENDIF.

  p_numc_cont = lv_text.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form CHECK_CREATE_FIELD
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM check_create_field .
  DATA: lv_check TYPE string.

  IF ok_code = 'CANCEL'.
    LEAVE TO SCREEN 0.
  ENDIF.

  IF zsc702_plant-plname = space
    OR zsc702_plant-pernr = space
    OR zsc702_plant-pname = space
    OR zsc702_plant-plcont = space
    OR zsc702_plant-pladr = space.

    MESSAGE '모든 필드를 입력해 주세요' TYPE 'E'.

  ELSE.
    lv_check = zsc702_plant-plcont.

    CALL FUNCTION 'ZFMC702_CONT'
      EXPORTING
        fv_cont        = lv_check
      IMPORTING
        fv_change_cont = gv_cont.

  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form SAVE_CREATE_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM save_create_data.
  DATA: ls_plant     TYPE ztc702_plant,
        lv_text      TYPE string,
        lv_number    TYPE n LENGTH 1,
        lv_nr_string TYPE string,
        lv_answer    TYPE c LENGTH 1.

**** 필드 조건 설정
  IF zsc702_plant-pernr IS INITIAL OR
     zsc702_plant-plname IS INITIAL OR
     zsc702_plant-pladr IS INITIAL OR
    zsc702_plant-plcont IS INITIAL.

    MESSAGE '공장코드를 제외한 나머지를 전부 입력해 주세요' TYPE 'I'.

  ELSE.
    MOVE-CORRESPONDING zsc702_plant TO ls_plant.

**** 모든 조건이 충족 될 경우 생성 진행
    CALL FUNCTION 'POPUP_TO_CONFIRM'
      EXPORTING
        titlebar              = '공장 등록'
        text_question         = '새로운 공장을 등록하시겠습니까?'
        text_button_1         = '예'
        text_button_2         = '아니오'
        display_cancel_button = space
      IMPORTING
        answer                = lv_answer.

**** 팝업에서 YES 일 경우 데이터 생성 작업
    IF lv_answer = 1.

**** 채번 펑션 모듈 실행

      CALL FUNCTION 'NUMBER_GET_NEXT'
        EXPORTING
          nr_range_nr = '01'
          object      = 'ZNRC702PP2'
        IMPORTING
          number      = lv_number.

      lv_nr_string = lv_number.       "채번 번호를 string형으로 변환

      IF sy-subrc = 0.
        CONCATENATE 'P0' lv_nr_string '00' INTO lv_text.
      ENDIF.

**** 채번코드 및 생성자 입력
      ls_plant-plcode = lv_text.
      ls_plant-crnam = sy-uname.
      ls_plant-erdat = sy-datum.
      ls_plant-ertim = sy-uzeit.
      ls_plant-plcont = gv_cont.
      INSERT ztc702_plant FROM ls_plant.

**** SY-SUBRC 체크
      IF sy-subrc = 0.
        MESSAGE i000 WITH lv_text.
        PERFORM get_plant_data.
        COMMIT WORK.
        LEAVE TO SCREEN 0.
      ELSE.
        MESSAGE '등록 실패' TYPE 'I'.          " 실패 시 이전 작업들 롤백
        ROLLBACK WORK.

      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form SAVE_CHANGE_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM save_change_data.
  DATA: ls_plant  TYPE ztc702_plant,
        lv_text   TYPE string,
        lv_answer TYPE c LENGTH 1.

**** 필드 조건 설정
  IF zsc702_plant-pernr IS INITIAL OR
     zsc702_plant-plname IS INITIAL OR
     zsc702_plant-pladr IS INITIAL OR
    zsc702_plant-plcont IS INITIAL.

    MESSAGE '공장코드를 제외한 나머지를 전부 입력해 주세요' TYPE 'I'.

  ELSE.

**** 모든 조건이 충족 될 경우 생성 진행
    CALL FUNCTION 'POPUP_TO_CONFIRM'
      EXPORTING
        titlebar              = '공장 정보 수정'
        text_question         = '공장 정보를 수정하시겠습니까?'
        text_button_1         = '예'
        text_button_2         = '아니오'
        display_cancel_button = space
      IMPORTING
        answer                = lv_answer.

**** 팝업에서 YES 일 경우 데이터 생성 작업
    IF lv_answer = 1.
      MOVE-CORRESPONDING ztc702_plant to ls_plant.

      ls_plant-chnam = sy-uname.
      ls_plant-chdat = sy-datum.
      ls_plant-chtim = sy-uzeit.
      ls_plant-plcont = gv_cont.
      UPDATE ztc702_plant FROM ls_plant.

*      subrc = p_subrc.
**** SY-SUBRC 체크
      IF subrc = 0.
        MESSAGE i012 WITH ls_plant-plcode.
        PERFORM get_plant_data.
        COMMIT WORK.
        LEAVE TO SCREEN 0.
      ELSE.
        MESSAGE '등록 실패' TYPE 'I'.          " 실패 시 이전 작업들 롤백
        ROLLBACK WORK.

      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Module  CHECK_PLCODE_100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE check_plcode_100 INPUT.
  IF ztc702_plant-plcode IS INITIAL OR ztc702_plant-plname IS INITIAL.
    MESSAGE '공장코드 및 공장이름을 입력해주세요' TYPE 'E'.

  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CHECK_PERNR_100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE check_pernr_100 INPUT.
  IF ztc702_plant-pernr IS INITIAL OR ztc702_plant-pname IS INITIAL.
    MESSAGE '담당자번호와 이름을 입력해주세요' TYPE 'E'.
  ENDIF.


ENDMODULE.
*&---------------------------------------------------------------------*
*& Form PLANT_INIT_110
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM plant_init_110 .
  DATA: ls_plant     TYPE ztc702_plant,
        lv_numc_cont TYPE n LENGTH 11.

  CASE gv_dynnr_check.                            " 모달 스크린 하나에서 생성, 수정 다르게
    WHEN 'CREATE'.
      LOOP AT SCREEN.
        IF screen-group1 = 'KEY'.
          screen-invisible = 1.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.
    WHEN 'CHANGE'.
      LOOP AT SCREEN.
        IF screen-group1 = 'KEY'.
          screen-invisible = 0.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.

      READ TABLE gt_plant INTO ls_plant INDEX gs_index.
      PERFORM change_cont USING ls_plant-plcont CHANGING lv_numc_cont.    " 연락처 하이픈 제거 서브루틴

      MOVE-CORRESPONDING ls_plant TO zsc702_plant.
      MOVE-CORRESPONDING ls_plant TO ztc702_plant.

      zsc702_plant-plcont = lv_numc_cont.
      IF lv_numc_cont+0(2) = '00'.
        zsc702_plant-plcont = zsc702_plant-plcont+2.
      ENDIF.
  ENDCASE.

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2023. Sap Release 751
