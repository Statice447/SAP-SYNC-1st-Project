*&---------------------------------------------------------------------*
*& Include          MZC702_PP_02O01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Module STATUS_0100 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'S0100'.
  SET TITLEBAR 'T0100'.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Module CLEAR_OK_CODE OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE clear_ok_code OUTPUT.
  CLEAR ok_code.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Module SET_ALV OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE set_alv OUTPUT.
**** 최초 컨테이너 생성 시
  IF go_container IS INITIAL.
    CREATE OBJECT go_container
      EXPORTING
        container_name = 'BOM_ALV'.
    gv_refresh     = abap_true.   " 리프레쉬 체크
  ENDIF.

***** 최초 ALV 생성 시
  IF gv_refresh = abap_true.      " 리프레시 확인
    CREATE OBJECT go_alv_grid
      EXPORTING
        i_parent = go_container.

***** ALV 핸들러 설정
    SET HANDLER lcl_handler=>on_double_click FOR go_alv_grid.

***** ALV 레이아웃 및 필드카탈로그 설정
    PERFORM set_layout.
    PERFORM set_fcat.

    CALL METHOD go_alv_grid->set_table_for_first_display
      EXPORTING
*       i_structure_name = 'ZTC702_BOM_H'
*       is_variant      = gs_variant
*       i_save          = gv_save
        i_default       = 'X'
        is_layout       = gs_layout
      CHANGING
        it_outtab       = gt_bom_h
        it_fieldcatalog = gt_fcat
*       it_sort         =
*       it_filter       =
      EXCEPTIONS
        OTHERS          = 4.
    IF sy-subrc <> 0.
*       Implement suitable error handling here
    ENDIF.

    gv_refresh = abap_false.    " 리프레시 해제

  ELSE.                         " 기존 ALV가 있을경우 리프레시
    go_alv_grid->refresh_table_display( ).
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Module INIT_100 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE init_100 OUTPUT.

**** ROW 색을 위한 LOOP문
  LOOP AT gt_bom_h INTO gs_bom_h.

***** 삭제플래그 체크 시 ROW 색 변경
    IF gs_bom_h-delflag = 'X'.
      gs_bom_h-color = 'C610'.
    ENDIF.

    MODIFY gt_bom_h FROM gs_bom_h TRANSPORTING color.
  ENDLOOP.

ENDMODULE.
*&---------------------------------------------------------------------*
*& Module SET_ALV_200 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE set_alv_110 OUTPUT.
**** 최초 컨테이너 생성 시
  IF go_container2 IS INITIAL.
    CREATE OBJECT go_container2
      EXPORTING
        container_name = 'BOM_ITEM'.
    gv_refresh2     = abap_true.   " 리프레쉬 체크
  ENDIF.

***** 최초 ALV 생성 시
  IF gv_refresh2 = abap_true.      " 리프레시 확인
    CREATE OBJECT go_alv_grid2
      EXPORTING
        i_parent = go_container2.

***** ALV 레이아웃 및 필드카탈로그 설정
*  PERFORM set_layout.
    PERFORM set_fcat_200.
    PERFORM set_exclude.

    CALL METHOD go_alv_grid2->set_table_for_first_display
      EXPORTING
*       i_structure_name     = 'ZTC702_BOM_I'
*       is_variant           = gs_variant
*       i_save               = gv_save
        i_default            = 'X'
*       is_layout            = gs_layout
        it_toolbar_excluding = gt_exclude
      CHANGING
        it_outtab            = gt_bom_200_i
        it_fieldcatalog      = gt_fcat_200
*       it_sort              =
*       it_filter            =
      EXCEPTIONS
        OTHERS               = 4.
    IF sy-subrc <> 0.
*       Implement suitable error handling here
    ENDIF.

    gv_refresh2 = abap_false.    " 리프레시 해제

  ELSE.                         " 기존 ALV가 있을경우 리프레시
    go_alv_grid2->refresh_table_display( ).
  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*& Module SET_ALV_300 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE set_alv_300 OUTPUT.
**** 최초 컨테이너 생성 시
  IF go_container3 IS INITIAL.
    CREATE OBJECT go_container3
      EXPORTING
        container_name = 'ADD_BOM_ITEM'.
    gv_refresh3     = abap_true.   " 리프레쉬 체크
  ENDIF.

***** 최초 ALV 생성 시
  IF gv_refresh3 = abap_true.      " 리프레시 확인
    CREATE OBJECT go_alv_grid3
      EXPORTING
        i_parent = go_container3.

***** ALV 레이아웃 및 필드카탈로그 설정
*  PERFORM set_layout.
    PERFORM set_fcat_300.

    CALL METHOD go_alv_grid3->set_table_for_first_display
      EXPORTING
*       i_structure_name = 'ZTC702_BOM_I'
*       is_variant      = gs_variant
*       i_save          = gv_save
        i_default       = 'X'
*       is_layout       = gs_layout
      CHANGING
        it_outtab       = gt_bom_i
        it_fieldcatalog = gt_fcat_300
*       it_sort         =
*       it_filter       =
      EXCEPTIONS
        OTHERS          = 4.
    IF sy-subrc <> 0.
*       Implement suitable error handling here
    ENDIF.

    gv_refresh3 = abap_false.    " 리프레시 해제

  ELSE.                         " 기존 ALV가 있을경우 리프레시
    go_alv_grid3->refresh_table_display( ).
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Module INIT_300 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE init_300 OUTPUT.
  ztc702_bom_i-unit = 'EA'.

  IF gt_bom_i IS INITIAL.
    LOOP AT SCREEN.
      IF screen-group1 = 'GR1'.
        screen-input = 1.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSE.
    LOOP AT SCREEN.
      IF screen-group1 = 'GR1'.
        screen-input = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.

  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Module STATUS_0300 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE status_0300 OUTPUT.
  SET PF-STATUS 'S0300'.
  SET TITLEBAR 'T0300'.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Module STATUS_0110 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE status_0110 OUTPUT.
  SET PF-STATUS 'S0110'.
  SET TITLEBAR 'T0110'.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Module STATUS_0200 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE status_0200 OUTPUT.
  SET PF-STATUS 'S0200'.
  SET TITLEBAR 'BDC'.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Form GET_FILEPATH
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_filepath .
  CLEAR : gv_rc, gt_file[].
  CALL METHOD g_frontend->file_open_dialog
    EXPORTING
      file_filter       = c_filter
      initial_directory = 'C:'
      default_filename  = space
    CHANGING
      file_table        = gt_file
      rc                = gv_rc
    EXCEPTIONS
      OTHERS            = 1.

  CLEAR p_file.
  READ TABLE gt_file INTO p_file INDEX 1.


ENDFORM.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2023. Sap Release 751
